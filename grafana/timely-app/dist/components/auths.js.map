{"version":3,"sources":["../../src/components/auths.js"],"names":["_","AuthsCtrl","backendSrv","$rootScope","$timeout","datasource","fetching","done","show","status","title","uri","_getURI","jsonData","basicAuths","basicAuthUser","basicAuthPassword","authBlob","username","password","doPostLogin","appEvent","name","doGetLogin","doXHR","verb","data","r","XMLHttpRequest","open","withCredentials","setRequestHeader","onreadystatechange","handleLoginResult","bind","send","JSON","stringify","response","readyState","cookie","document","match","console","log","statusText","alert","getResponseHeader","timelyHost","httpsPort"],"mappings":"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","file":"auths.js","sourcesContent":["import _ from 'lodash';\n\nexport class AuthsCtrl {\n\n  constructor(backendSrv, $rootScope, $timeout){\n    this.$rootScope = $rootScope;\n    this.$timeout = $timeout;\n    this.backendSrv = backendSrv;\n  }\n\n  login(datasource){\n    this.fetching = {};\n    this.fetching.done = false;\n    this.fetching.show = true;\n    this.fetching.status = 'warning';\n    this.fetching.title = 'Fetching auths...';\n\n    //this.$rootScope.appEvent('alert-success', ['Authorization Cookie Received', '']);\n    //this.$rootScope.appEvent('alert-error', ['Authorization Failed', '']);\n    //this.$rootScope.appEvent('alert-warning', ['Fetching Authorizations', '']);\n\n    var uri = this._getURI(datasource.jsonData);\n\n    if(datasource.jsonData.basicAuths){\n      if( this.basicAuthUser && this.basicAuthPassword){\n        var authBlob = {username: this.basicAuthUser, password: this.basicAuthPassword};\n        this.doPostLogin(uri, authBlob);\n      } else {\n        this.$rootScope.appEvent('alert-warning', [datasource.name, 'requires User/Password']);\n        this.fetching.status = 'warning';\n        this.fetching.title = 'User/Password required';\n\n        return;\n      }\n    } else {\n      this.doGetLogin(uri);\n    }\n\n  }\n\n  doPostLogin(uri, authBlob){\n    this.doXHR('POST', uri, authBlob);\n  }\n\n  doGetLogin(uri){\n    this.doXHR('GET', uri)\n  }\n\n  doXHR(verb, uri, data){\n    if( !data){\n      data = \"\";\n    }\n    var r = new XMLHttpRequest();\n    r.open(verb, uri, true);\n    r.withCredentials = true;\n    r.setRequestHeader('Content-Type', 'application/json');\n    r.onreadystatechange = function () {\n      this.handleLoginResult(r);\n    }.bind(this);\n    r.send(JSON.stringify(data));\n  }\n\n  handleLoginResult(response){\n    // wait for readyState to be '4 => done'\n    if (response.readyState != 4) return;\n\n    this.fetching.done = true;\n\n    switch(response.status){\n      case 200:\n        var cookie = (document.cookie.match(/^(?:.*;)?TSESSIONID=([^;]+)(?:.*)?$/)||[,null])[1]\n        console.log(cookie);\n        console.log(document.cookie);\n        \n        this.fetching.status = 'success';\n        this.fetching.title = 'Login successful';\n        this.$rootScope.appEvent('alert-success', ['Success', '']);\n        break;\n      default:\n        this.fetching.status = 'warning';\n        this.fetching.title = response.statusText;\n        this.$rootScope.appEvent('alert-warning', [response.status+': '+response.statusText,'']);\n        break;\n    }\n\n    if (r.readyState != 4 || r.status != 200) return;\n    alert(\"Success: \" + r.getResponseHeader('Set-Cookie'));\n  }\n\n  _getURI(jsonData){\n    return 'https://'+jsonData.timelyHost+':'+jsonData.httpsPort+'/login'\n  }\n\n  _showResults(){\n\n  }\n}\n"]}